version: "3.2"

services:
    # manager
    adminer:
        build:
            context: ./adminer
            dockerfile: "Dockerfile"
        restart: always
        ports:
            - "${ADMINER_PORT}:8080"
        networks:
            - backend

    # mysql
    mysql:
        build:
            context: ./mysql
            args:
                - MYSQL_VERSION=${MYSQL_VERSION}
            dockerfile: "Dockerfile"
        #image: mysql
        ports:
            - "${MYSQL_PORT}:3306"
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        volumes:
            #数据库的数据持久化到磁盘
            - mysqldata:/var/lib/mysql
        depends_on:
            - adminer
        networks:
            - backend

    # mongo
    mongo:
        build:
            context: ./mongo
            args:
                - MONGO_VERSION=${MONGO_VERSION}
            dockerfile: "Dockerfile"
        ports:
            - "${MONGO_PORT}:27017"
        environment:
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PWD}
        volumes:
            #数据持久化到磁盘
            - mongodata:/data/db
        restart: always
        depends_on:
            - adminer
        networks:
            - backend

volumes:
    mysqldata:
        driver: local
    mongodata:
        driver: local

networks:
    backend:
        external: 
            name: "backend"
